% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_classify_table.R
\name{make_classify_table}
\alias{make_classify_table}
\title{Classify diagnosis codes to long format with exemptions}
\usage{
make_classify_table(.data, icdcodes, diag_tbl, return_binary = TRUE)
}
\arguments{
\item{.data}{tibble of register data which we want to study}

\item{icdcodes}{name of the variable holding ICD-codes}

\item{diag_tbl}{tibble which holds the classification details: needs to have variables 'regex' and 'label'
'regex' must hold a string with a regular expression defining classes.
'regex.rm' is optional, defines exceptions to 'regex' (these are not in the group they are named in)
'label' defines the names of the variables of classes (e.g. comorbidity indicators)}
}
\value{
Returns a tibble containing classification table which can be joined to initial data
}
\description{
Computes classification table which can be attached to original data using left_join().
}
\examples{
\dontrun{
# we calculate the table which can be used for classification.
# 'ostprekoh' is the register data containing 'lomno1' individual id number and data 'dg' contains the register data of disease diagnoses.
ostprekoh \%>\%
  left_join(dg \%>\% select(lomno1,KOODI1,tulopvm,lahtopvm),by="lomno1") \%>\%
  mutate(Postituspvm=ymd(Postituspvm)) \%>\%
  filter_date(indexdate=Postituspvm,range=years(2),tulopvm,lahtopvm) \%>\% # filtering the diagnosis codes which are in the interval for each individual!
  classify_long(icdcodes=KOODI1,diag_tbl=sel_classes)
}
}
